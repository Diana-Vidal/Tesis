theme_bw()
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5))
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme_bw(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5))
# Defunciones por grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5)) +
theme_bw()
# Defunciones por grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5))
# Defunciones por grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5)) +
theme_bw()
# Defunciones por grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "plot",
plot.caption = element_text(hjust = 0.5)) +
theme_bw()
def_zmvm %>%
ggplot()+
geom_bar(aes(x = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), y = ..count..), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 en la ZMVM durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Grupo de edad",
y = "Número de defunciones") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
# Defunciones por zona geografica en ZMVM
def_zmvm %>%
ggplot()+
geom_bar(aes(x = ZONA, y = ..count.., fill = ZONA), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 por zona gegráfica de la ZMVM durante el 2020 y 2021",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Zona geográfica")+
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5),
legend.position = "none")
# Defunciones por zona geografica en ZMVM por entidad
def_zmvm %>%
ggplot()+
geom_bar(aes(x = ZONA, y = ..count.., fill = ZONA), position = "dodge")+
facet_wrap(~ENTIDAD_RES, scales = "free")
# Defunciones por zona geografica y sexo
def_zmvm %>%
ggplot()+
geom_bar(aes(x = SEXO, y = ..count.., fill = SEXO), position = "dodge")+
facet_grid(~ZONA, scales = "free")
# Defunciones por zona geografica en ZMVM
def_zmvm %>%
ggplot()+
geom_bar(aes(x = ZONA, y = ..count.., fill = ZONA), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 por zona gegráfica de la ZMVM durante el 2020 y 2021",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Zona geográfica")+
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5),
legend.position = "none")
# Defunciones por zona geografica en ZMVM
def_zmvm %>%
ggplot()+
geom_bar(aes(x = ZONA, y = ..count.., fill = ZONA), position = "dodge")+
labs (title = "Gráfico n. Defunciones por COVID-19 por zona gegráfica de la ZMVM durante el 2020 y 2021",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Zona geográfica",
y = "Número de defunciones")+
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5),
legend.position = "none")
# Defunciones por zona geografica y sexo
def_zmvm %>%
ggplot()+
geom_bar(aes(x = SEXO, y = ..count.., fill = SEXO), position = "dodge")+
facet_grid(~ZONA, scales = "free") +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo y zona gegráfica de la ZMVM, durante el 2020 y 2021",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Sexo",
y = "Número de defunciones")+
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5),
legend.position = "none")
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free")
View(def_zmvm)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,8000)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "fill")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,8000)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free_x") +
xlim(0,8000)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free_x") +
xlim(0,7000)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free_x") +
xlim(0,8000)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free_x") +
xlim(0,7500)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "fixed") +
xlim(0,7500)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "fill")+
facet_wrap(~ZONA, scales = "fixed") +
xlim(0,7500)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "stack")+
facet_wrap(~ZONA, scales = "fixed") +
xlim(0,7500)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "stack")+
facet_wrap(~ZONA, scales = "fixed") +
xlim(0,7500)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "fill")+
facet_wrap(~ZONA, scales = "free")
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,7500) +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo, grupo de edad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad",
alpha = "Sexo")
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,7500) +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo, grupo de edad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad")  +
guides(fill = guide_legend(title = "Sexo"))
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,7500) +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo, grupo de edad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad",
fill = "Sexo")
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,7500) +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo, grupo de edad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad",
fill = "Sexo")  +
scale_fill_hue(labels = c("Hombre", "Mujer"))
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,7500) +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo, grupo de edad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad",
fill = "Sexo")  +
scale_fill_hue(labels = c("Hombre", "Mujer")) +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
# Defunciones por grupo de edad y comorbilidad y zona
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(.,COMORBILIDAD,COM_VALOR,4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA,GRUPO_EDAD,COMORBILIDAD) %>%
summarise(DEF = n()) %>%
ggplot()+
geom_bar(aes(x = DEF, y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), fill = COMORBILIDAD), position = "fill", stat = "identity")+
facet_wrap(~ZONA, scales = "free")
View(def_zmvm)
# Defunciones por región, por sexo y grupo de edad
def_zmvm %>%
ggplot()+
geom_bar(aes(y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free") +
xlim(0,7500) +
labs (title = "Gráfico n. Defunciones por COVID-19 por sexo, grupo de edad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad")  +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(., COMORBILIDAD, COM_VALOR, 4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA, GRUPO_EDAD, COMORBILIDAD)
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(., COMORBILIDAD, COM_VALOR, 4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA, GRUPO_EDAD, COMORBILIDAD) %>%
summarise(DEF = n())
# Defunciones por grupo de edad y comorbilidad y zona
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(., COMORBILIDAD, COM_VALOR, 4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA, GRUPO_EDAD, COMORBILIDAD) %>%
summarise(DEF = n()) %>%
ggplot() +
geom_bar(aes(x = DEF, y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), fill = COMORBILIDAD), position = "fill", stat = "identity") +
facet_wrap(~ZONA, scales = "free") +
labs (title = "Gráfico n. Defunciones por COVID-19 por grupo de edad, comorbilidad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad")  +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
View(def_zmvm)
# Defunciones por grupo de edad y comorbilidad y zona
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(., COMORBILIDAD, COM_VALOR, 4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA, GRUPO_EDAD, COMORBILIDAD) %>%
summarise(DEF = n()) %>%
ggplot() +
geom_bar(aes(x = DEF, y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), fill = COMORBILIDAD), position = "fill", stat = "identity") +
facet_wrap(~ZONA, scales = "free") +
labs (title = "Gráfico n. Proporción de defunciones por COVID-19 por grupo de edad, comorbilidad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Número de defunciones",
y = "Grupo de edad")  +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
# Defunciones por grupo de edad y comorbilidad y zona
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(., COMORBILIDAD, COM_VALOR, 4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA, GRUPO_EDAD, COMORBILIDAD) %>%
summarise(DEF = n()) %>%
ggplot() +
geom_bar(aes(x = DEF, y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), fill = COMORBILIDAD), position = "fill", stat = "identity") +
facet_wrap(~ZONA, scales = "free") +
labs (title = "Gráfico n. Proporción de defunciones por COVID-19 por grupo de edad, comorbilidad y zona gegráfica de la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Proporción de defunciones",
y = "Grupo de edad")  +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
def_zmvm %>%
select(SEXO, GRUPO_EDAD, ZONA, DIABETES, EPOC, ASMA, HIPERTENSION, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA) %>%
gather(., COMORBILIDAD, COM_VALOR, 4:10) %>%
filter(COM_VALOR == "SI") %>%
group_by(ZONA, GRUPO_EDAD, COMORBILIDAD) %>%
summarise(DEF = n()) %>%
ggplot() +
geom_bar(aes(x = DEF, y = factor(GRUPO_EDAD, levels = GRUPO_EDAD_ord), fill = COMORBILIDAD), position = "fill", stat = "identity") +
facet_wrap(~ZONA, scales = "free") +
scale_x_continuous(labels = scales::percent)
# Cargamos base de pm
# Eliminamos valores nulos de zona (municipios que no pertenecen a ZMVM)
pm <- fread("Bases/pm.csv",
encoding = "Latin-1") %>%
filter(!is.na(zona))
library(dint)
library(scales)
# Cargamos base de pm
# Eliminamos valores nulos de zona (municipios que no pertenecen a ZMVM)
pm <- fread("Bases/pm.csv",
encoding = "Latin-1") %>%
filter(!is.na(zona))
# Grafico de lineas de concentraciones 2019, 2020 y 2021
pm %>%
ggplot()+
geom_line(aes(x = fecha, y = value))+
geom_smooth(aes(x = fecha, y = value))
# Grafico de lineas de concentraciones 2019, 2020 y 2021
pm %>%
ggplot() +
geom_line(aes(x = fecha, y = value))+
geom_smooth(aes(x = fecha, y = value)) +
labs (title = "Gráfico n. Concentraciones promedio durante 24 h de PM2.5 en la ZMVM, durante el 2020 y 2021.",
caption = "Creación propia con datos obtenidos de base de datos abiertos del Sistema de Vigilancia de Enfermedades Respiratorias.",
x = "Fecha",
y = "Concentración promedio de 24 h de PM2.5")  +
theme(plot.title = element_text(hjust = 0.5),
plot.caption.position = "panel",
plot.caption = element_text(hjust = 0.5))
View(pm)
pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31") %>%
ggplot() +
geom_violin(aes(x = cve_estac, y = value, fill = zona))
View(pm)
# Boxplot de concentraciones por estacion en 2019
pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
# Boxplot de concentraciones por estacion en 2019
pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")+
facet_grid(zona~.)
# Boxplot de concentraciones por estacion en 2019
pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
# Boxplot de concentraciones por estacion en 2019
pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas") %>%
pm %>%
filter(fecha >= "2020-01-01" & fecha <= "2020-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = cve_estac)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2020",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
# Boxplot de concentraciones por estacion en 2019
pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas") +
pm %>%
filter(fecha >= "2020-01-01" & fecha <= "2020-12-31") %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = cve_estac)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2020",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")+
facet_wrap()
pm2019<- pm %>%
filter(fecha >= "2019-01-01" & fecha <= "2019-12-31")
ggplot(pm2019) +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
pm2020<- pm %>%
filter(fecha >= "2020-01-01" & fecha <= "2020-12-31")
pm2021<- pm %>%
filter(fecha >= "2021-01-01" & fecha <= "2021-12-31")
a <- ggplot(pm2019) +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
b <- ggplot(pm2019) +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
c <- ggplot(pm2019) +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas")
a+b+c+
facet_wrap()
a %>% b %>% c+
facet_wrap()
# Cargamos base de pm
# Eliminamos valores nulos de zona (municipios que no pertenecen a ZMVM)
pm <- fread("Bases/pm.csv",
encoding = "Latin-1") %>%
filter(!is.na(zona))
View(pm)
pm %>%
ggplot() +
geom_boxplot(aes(x = cve_estac, y = value, fill = zona)) +
labs (title = "Concentraciones promedio en 24 h de PM2.5 por estación de la ZMVM durante 2019",
caption = "Creacion propia con datos abiertos del SIMAT",
x = "Estaciones",
y = "Concentracion promedio en 24 horas") +
facet_wrap(~fecha)
pm$año <- as.numeric(format(date,'%Y'))
pm$año <- as.numeric(format(fecha,'%Y'))
pm$año <- format(as.Date(pm$fecha, format = "%YYYY-%mm/%dd"))
View(pm)
pm$año <- format(as.Date(pm$fecha, format = "%YYYY"))
# Cargamos base de pm
# Eliminamos valores nulos de zona (municipios que no pertenecen a ZMVM)
pm <- fread("Bases/pm.csv",
encoding = "Latin-1") %>%
filter(!is.na(zona))
