unique(pm$ZONA)
unique(pm$zona)
str(pm)
summary(pm)
#Cargamos librerias
library(data.table)
library(tidyverse)
def_zmvm <- fread("Bases/def_zmvm.csv")
View(def_zmvm)
def_zmvm <- fread("Bases/def_zmvm.csv", encoding = "ISO-8859-1")
def_zmvm <- fread("Bases/def_zmvm.csv", encoding = "UTF-8")
View(def_zmvm)
def_zmvm <- fread("Bases/def_zmvm.csv", encoding = "Latin-1")
View(def_zmvm)
#Valores unicos de Municipio
unique(def_zmvm$MUNICIPIO_RES)
#Valores unicos de Zona
unique(def_zmvm$ZONA)
# Cargamos las bases de los promedios de PM2.5 de 2019 a 2021
pm2019 <- fread("Bases/Bases PM/promedios_2019_ps.csv")
pm2020 <- fread("Bases/Bases PM/promedios_2020_ps.csv")
pm2021 <- fread("Bases/Bases PM/promedios_2021_ps.csv")
#Cargamos el catalogo de estaciones
cat_est <- fread("Bases/Bases PM/Catálogos/cat_estacion.csv")
# Cargamos base de estaciones con municipio
estac_mpo <- fread("Bases/Bases PM/Catálogos/estac_mpo.csv")
# Unimos las bases de los tres años
# Unimos con catalogo de estaciones
# Unimos con los municipios donde se encuentran las estaciones
pm <- rbind(pm2019,pm2020, pm2021) %>%
left_join(., cat_est, by = c("id_station" = "cve_estac")) %>%
left_join(.,estac_mpo, by = c("nom_estac" = "Nombre")) %>%
left_join(., zonas, by = c("Alcaldía o municipio" = "MUNICIPIO",
"Entidad" = "ENTIDAD")) %>%
rename("fecha" = 1,
"municipio" = 13,
"entidad" =14,
"zona" = 15) %>%
mutate(fecha = as.Date(fecha, format = "%Y-%m-%d")) %>%
select(fecha,nom_estac, id_station, value, longitud, latitud, municipio, entidad, zona)
library(data.table)
## Categoricas
table(def_zmvm$DIABETES)
prop.table(table(def_zmvm$DIABETES))
#Cargamos base con zonas geograficas de la ZMVM
zonas <- fread("Bases/Zonas_ZMVM.csv")
View(zonas)
pob_zmvm <- fread("Bases/Municipios_ZMVM_Pob.csv") %>%
select(-2)
View(pob_zmvm)
#Valores unicos de Zona
unique(def_zmvm$ZONA)
#Valores unicos de Municipio
unique(def_zmvm$MUNICIPIO_RES)
#Cargamos el catalogo de estaciones
cat_est <- fread("Bases/Bases PM/Catálogos/cat_estacion.csv")
View(cat_est)
# Cargamos base de estaciones con municipio
estac_mpo <- fread("Bases/Bases PM/Catálogos/estac_mpo.csv")
View(estac_mpo)
# Unimos las bases de los tres años
# Unimos con catalogo de estaciones
# Unimos con los municipios donde se encuentran las estaciones
pm <- rbind(pm2019,pm2020, pm2021) %>%
left_join(., cat_est, by = c("id_station" = "cve_estac")) %>%
left_join(.,estac_mpo, by = c("nom_estac" = "Nombre")) %>%
left_join(., zonas, by = c("Alcaldía o municipio" = "MUNICIPIO",
"Entidad" = "ENTIDAD")) %>%
rename("fecha" = 1,
"municipio" = 13,
"entidad" =14,
"zona" = 15) %>%
mutate(fecha = as.Date(fecha, format = "%Y-%m-%d")) %>%
select(fecha,nom_estac, id_station, value, longitud, latitud, municipio, entidad, zona)
View(pm)
write.csv(base_PM, "Bases/base_PM.csv",
row.names = F,
fileEncoding = "ISO-8859-1")
write.csv(Base_PM, "Bases/Base_PM.csv",
row.names = F,
fileEncoding = "ISO-8859-1")
write.csv(pm, "Bases/pm.csv",
row.names = F,
fileEncoding = "ISO-8859-1")
View(pm)
View(def_zmvm)
table(def_zmvm$SEXO)
prop.table(table(def_zmvm$SEXO))
def_zmvm %>%
ggplot()+
geom_bar(aes(x = SEXO, y = ..count.., fill = GRUPO_EDAD))+
facet_grid(~ZONA)
def_zmvm %>%
ggplot()+
geom_bar(aes(x = SEXO, y = ..count.., fill = GRUPO_EDAD))+
facet_wrap(~ZONA)
def_zmvm %>%
ggplot()+
geom_bar(aes(x = SEXO, y = ..count.., fill = GRUPO_EDAD), position = "dodge")+
facet_wrap(~ZONA)
def_zmvm %>%
ggplot()+
geom_bar(aes(y = GRUPO_EDAD, x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA)
def_zmvm %>%
mutate(GRUPO_EDAD = factor(GRUPO_EDAD, levels = c("0 - 4",
"5 - 9",
"10 - 14",
"15 - 19",
"20 - 24",
"25 - 29",
"30 - 34",
"35 - 39",
"40 - 44",
"45 - 49",
"50 - 54",
"55 - 59",
"55 - 59",
"60 - 64",
"65 o más"))) %>%
ggplot()+
geom_bar(aes(y = GRUPO_EDAD, x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA)
def_zmvm %>%
mutate(GRUPO_EDAD = factor(GRUPO_EDAD, levels = c("0 - 4",
"5 - 9",
"10 - 14",
"15 - 19",
"20 - 24",
"25 - 29",
"30 - 34",
"35 - 39",
"40 - 44",
"45 - 49",
"50 - 54",
"55 - 59",
"60 - 64",
"65 o más"))) %>%
ggplot()+
geom_bar(aes(y = GRUPO_EDAD, x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA)
def_zmvm %>%
mutate(GRUPO_EDAD = factor(GRUPO_EDAD, levels = c("0 - 4",
"5 - 9",
"10 - 14",
"15 - 19",
"20 - 24",
"25 - 29",
"30 - 34",
"35 - 39",
"40 - 44",
"45 - 49",
"50 - 54",
"55 - 59",
"60 - 64",
"65 o más"))) %>%
ggplot()+
geom_bar(aes(y = GRUPO_EDAD, x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free")
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO) %>%
summarise(POB_MUN=sum(POB_MUN))
View(mort_mun)
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN) %>%
summarise(NUM_DEF=n())
View(mort_mun)
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*10000)
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*1000)
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000)
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000)
MX <- getData("GADM", country = "MX", level = 2)
library(tidyverse)
library(data.table)
library(aweek)
library(tidyverse)
library(data.table)
library(raster)
library(stringi)
library(leaflet)
library(tidyverse)
library(data.table)
library(raster)
library(stringi)
library(leaflet)
MX <- getData("GADM", country = "MX", level = 2)
MX@data
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data
MX@data <- left_join(MX@data, mort_mun, by = c("NAME_2"= "MUNICIPIO_RES"))
MX@data
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*10000)
mort_mun <- def_zmvm %>%
group_by(MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*1000000)
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
mort_mun <- def_zmvm %>%
group_by(ENTIDAD,RES MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
mort_mun <- def_zmvm %>%
group_by(ENTIDAD_RES MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
mort_mun <- def_zmvm %>%
group_by(ENTIDAD_RES, MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*1000000)
group_by(ENTIDAD_RES, MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*1000000)
mort_mun <- def_zmvm %>%
filter(AÑO == 2020) %>%
group_by(ENTIDAD_RES, MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*1000000)
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
MX@data <- left_join(MX@data, mort_mun, by = c("NAME_1" = "ENTIDAD_RES"
,"NAME_2"= "MUNICIPIO_RES"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
MX@data
View(MX)
View(MX@data)
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
MX@data <- left_join(MX@data, mort_mun, by = c("NAME_1" = "ENTIDAD_RES"
,"NAME_2"= "MUNICIPIO_RES"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
View(MX)
View(MX@data)
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data <- MX@data %>%
filter(NAME_1 %in% c("CIUDAD DE MEXICO", "MEXICO"))
MX@data <- left_join(MX@data, mort_mun, by = c("NAME_1" = "ENTIDAD_RES"
,"NAME_2"= "MUNICIPIO_RES"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
View(MX)
View(MX@data)
MX <- getData("GADM", country = "MX", level = 2)
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data <- MX@data %>%
filter(NAME_1 %in% c("CIUDAD DE MEXICO", "MEXICO"))
MX@data <- left_join(MX@data, mort_mun, by = c("NAME_1" = "ENTIDAD_RES"
,"NAME_2"= "MUNICIPIO_RES"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
View(MX)
View(MX@data)
mort_mun <- def_zmvm %>%
filter(AÑO == 2021) %>%
group_by(ENTIDAD_RES, MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*1000000)
MX <- getData("GADM", country = "MX", level = 2)
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data <- MX@data %>%
filter(NAME_1 %in% c("CIUDAD DE MEXICO", "MEXICO"))
MX@data <- left_join(MX@data, mort_mun, by = c("NAME_1" = "ENTIDAD_RES"
,"NAME_2"= "MUNICIPIO_RES"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
View(MX)
View(MX@data)
MX <- getData("GADM", country = "MX", level = 2)
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_2 <- toupper(MX@data$NAME_2)
MX@data$NAME_2 <- stri_trans_general(MX@data$NAME_2, "Latin-ASCII")
MX@data <- MX@data %>%
filter(NAME_1 %in% c("CIUDAD DE MEXICO", "MEXICO"))
MX@data <- left_join(MX@data, mort_mun,
by = c("NAME_1" = "ENTIDAD_RES"
,"NAME_2"= "MUNICIPIO_RES")) %>%
filter(!is.na(ZONA))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mort_mun$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
View(MX)
View(MX@data)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
library(tidyverse)
library(data.table)
library(raster)
library(stringi)
library(leaflet)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mort_mun$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX@data,
fillColor  = ~color_num(mort_mun$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_2, ": ", round(mort_mun$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5)
mort_mun <- def_zmvm %>%
group_by(ENTIDAD_RES, MUNICIPIO_RES, AÑO,POB_MUN, POB_ENT, ZONA) %>%
summarise(NUM_DEF=n()) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB_MUN)*100000,
TASA_AJUSTADA = (NUM_DEF/POB_ENT)*1000000)
View(mort_mun)
View(pm)
def_zmvm %>%
mutate(GRUPO_EDAD = factor(GRUPO_EDAD, levels = c("0 - 4",
"5 - 9",
"10 - 14",
"15 - 19",
"20 - 24",
"25 - 29",
"30 - 34",
"35 - 39",
"40 - 44",
"45 - 49",
"50 - 54",
"55 - 59",
"60 - 64",
"65 o más"))) %>%
ggplot()+
geom_bar(aes(y = GRUPO_EDAD, x = ..count.., fill = SEXO), position = "dodge")+
facet_wrap(~ZONA, scales = "free")
def_zmvm %>%
mutate(GRUPO_EDAD = factor(GRUPO_EDAD, levels = c("0 - 4",
"5 - 9",
"10 - 14",
"15 - 19",
"20 - 24",
"25 - 29",
"30 - 34",
"35 - 39",
"40 - 44",
"45 - 49",
"50 - 54",
"55 - 59",
"60 - 64",
"65 o más"))) %>%
ggplot()+
geom_bar(aes(y = GRUPO_EDAD, x = ..count.., fill = SEXO), position = "fill")+
facet_wrap(~ZONA, scales = "free")
