summarise(NUM_DEF = n())
View(COVID2020)
#Cargamos la base de COVID-19 Datos Abiertos
COVID2020 <- fread("Bases/Datos abiertos/COVID19MEXICO2020.csv",
select = variables) %>%
mutate(FECHA_DEF = as.Date(FECHA_DEF,format = "%Y-%m-%d")) %>%
filter(!is.na(FECHA_DEF),
CLASIFICACION_FINAL %in% c(1,2,3)) %>%
group_by(ENTIDAD_UM) %>%
summarise(NUM_DEF = n())
View(COVID2021)
View(COVID2020_2021)
#Cargamos la base de COVID-19 Datos Abiertos
COVID2020 <- fread("Bases/Datos abiertos/COVID19MEXICO2020.csv",
select = variables) %>%
mutate(FECHA_DEF = as.Date(FECHA_DEF,format = "%Y-%m-%d")) %>%
filter(!is.na(FECHA_DEF),
CLASIFICACION_FINAL %in% c(1,2,3)) %>%
group_by(ENTIDAD_UM) %>%
summarise(NUM_DEF = n()) %>%
add_column(COVID2020, AÑO=2020)
View(COVID2020)
COVID2020 <- fread("Bases/Datos abiertos/COVID19MEXICO2020.csv",
select = variables) %>%
mutate(FECHA_DEF = as.Date(FECHA_DEF,format = "%Y-%m-%d")) %>%
add_column(., AÑO = 2020) %>%
filter(!is.na(FECHA_DEF),
CLASIFICACION_FINAL %in% c(1,2,3))
View(COVID2020)
#Cargamos la base de COVID-19 Datos Abiertos
COVID2020 <- fread("Bases/Datos abiertos/COVID19MEXICO2020.csv",
select = variables) %>%
mutate(FECHA_DEF = as.Date(FECHA_DEF,format = "%Y-%m-%d")) %>%
add_column(., AÑO = 2020) %>%
filter(!is.na(FECHA_DEF),
CLASIFICACION_FINAL %in% c(1,2,3)) %>%
group_by(ENTIDAD_UM, AÑO) %>%
summarise(NUM_DEF = n())
View(COVID2020)
#Cargamos la base de COVID-19 Datos Abiertos
COVID2021 <- fread("Bases/Datos abiertos/COVID19MEXICO2021.csv",
select = variables) %>%
mutate(FECHA_DEF = as.Date(FECHA_DEF,format = "%Y-%m-%d")) %>%
add_column(., AÑO = 2021) %>%
filter(!is.na(FECHA_DEF),
CLASIFICACION_FINAL %in% c(1,2,3)) %>%
filter(FECHA_DEF <= "2021-12-31") %>%
group_by(ENTIDAD_UM, AÑO) %>%
summarise(NUM_DEF = n())
View(COVID2021)
#Unimos ambas bases para juntar las defunciones de 2020 y 2021
COVID2020_2021 <- rbind(COVID2020, COVID2021)
View(COVID2020_2021)
#Cargamos bases de CONAPO
CONAPO1 <- fread("Bases/CONAPO/base_municipios_final_datos_01.csv", encoding = "Latin-1") %>%
rename("AÑO" = 7) %>%
filter(AÑO %in% c("2020","2021")) %>%
group_by(CLAVE_ENT, NOM_ENT, AÑO) %>%
summarise(POB=sum(POB))
View(CONAPO1)
View(CONAPO1)
CONAPO2 <- fread("Bases/CONAPO/CONAPO2.csv", encoding = "Latin-1")
View(CONAPO2)
View(CONAPO1)
CONAPO2020_2021 <- rbind(CONAPO1, CONAPO2)
View(CONAPO2020_2021)
View(COVID2020_2021)
View(CONAPO2020_2021)
#Creamos la base de mortalidad y calculamos la tasa para cada estado
mortalidad <- left_join(COVID2020_2021, CONAPO2020_2021, by = c("ENTIDAD_UM" = "Clave",
"AÑO" = "AÑO"))
#Creamos la base de mortalidad y calculamos la tasa para cada estado
mortalidad <- left_join(COVID2020_2021, CONAPO2020_2021, by = c("ENTIDAD_UM" = "CLAVE_ENT",
"AÑO" = "AÑO"))
View(mortalidad)
View(CONAPO2020_2021)
#Creamos la base de mortalidad y calculamos la tasa para cada estado
mortalidad <- left_join(COVID2020_2021, CONAPO2020_2021, by = c("ENTIDAD_UM" = "CLAVE_ENT",
"AÑO" = "AÑO")) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB)*10000)
View(mortalidad)
#Descargamos base de mortalidad para realizar el ajuste de tasas
write.csv(mortalidad, "Bases/CONAPO/mortalidad.csv",
row.names = F,
fileEncoding = "ISO-8859-1")
#Descargamos base de CONAPO para sacar poblacion total de 2020 y 2021
write.csv(CONAPO2020_2021,"Bases/CONAPO/CONAPO.csv",
row.names = F,
fileEncoding = "ISO-8859-1")
#Volvemos a subir las bases con tasas ajustadas
mortalidad <- fread("Bases/CONAPO/mortalidad.csv",
encoding = "Latin-1")
View(mortalidad)
#Creamos la base de mortalidad y calculamos la tasa para cada estado
mortalidad <- left_join(COVID2020_2021, CONAPO2020_2021, by = c("ENTIDAD_UM" = "CLAVE_ENT",
"AÑO" = "AÑO")) %>%
mutate(TASA_MORTALIDAD = (NUM_DEF/POB)*10000)
#Volvemos a subir las bases con tasas ajustadas
mortalidad_aj <- fread("Bases/CONAPO/mortalidad.csv",
encoding = "Latin-1")
View(mortalidad_aj)
#Paso 1 Carga de librerías
library(tidyverse)
library(data.table)
library(raster)
library(stringi)
library(leaflet)
# MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
#Limpieza de la infomación de los mapas
MX <- getData("GADM", country = "MX", level = 1)
# MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
View(mortalidad_aj)
##** CAmbiar incidencia_Entidad por el de mortalidad **
MX@data <- left_join(MX@data, mortalidad_aj, by = c("NAME_1"= "NOM_ENT"))
View(MX)
#VAlores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad_aj$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad_aj),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,7500, by =1000), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad_aj$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,7500, by =1000), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad_aj),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,7500, by =1000), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
#Paso 3: Limpieza de la infomación de los mapas
MX <- getData("GADM", country = "MX", level = 1)
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
##** CAmbiar incidencia_Entidad por el de mortalidad **
MX@data <- left_join(MX@data, mortalidad_aj, by = c("NAME_1"= "NOM_ENT"))
#VAlores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad_aj$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad_aj),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,7500, by =1000), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
#Paso 1 Carga de librerías
library(tidyverse)
library(data.table)
library(aweek)
library(raster)
library(stringi)
library(leaflet)
#Paso 3: Limpieza de la infomación de los mapas
MX <- getData("GADM", country = "MX", level = 1)
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
### CAmbiar incidencia_Entidad por el de mortalidad
MX@data <- left_join(MX@data, mortalidad_aj, by = c("NAME_1"= "ENTIDAD_UM"))
rlang::last_error()
### CAmbiar incidencia_Entidad por el de mortalidad
MX@data <- left_join(MX@data, mortalidad_aj, by = c("NAME_1"= "NOM_ENT"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad_aj$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad_aj$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,300, by =100), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num,
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad_aj),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
mortalidad2020 <- mortalidad_aj %>%
filter(AÑO = 2020)
mortalidad2020 <- mortalidad_aj %>%
filter(AÑO == 2020)
View(mortalidad2020)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
#Paso 3: Limpieza de la infomación de los mapas
MX <- getData("GADM", country = "MX", level = 1)
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
### CAmbiar incidencia_Entidad por el de mortalidad
MX@data <- left_join(MX@data, mortalidad2020, by = c("NAME_1"= "NOM_ENT"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad2020$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad_aj,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
mortalidad2021 <- mortalidad_aj %>%
filter(AÑO == 2021)
View(mortalidad2021)
#Volvemos a subir las bases con tasas ajustadas
mortalidad_aj <- fread("Bases/CONAPO/mortalidad.csv",
encoding = "Latin-1")
#Cargamos librerias
library(data.table)
library(tidyverse)
#Volvemos a subir las bases con tasas ajustadas
mortalidad_aj <- fread("Bases/CONAPO/mortalidad.csv",
encoding = "Latin-1")
library(tidyverse)
library(data.table)
library(aweek)
library(raster)
library(stringi)
library(leaflet)
mortalidad2020 <- mortalidad_aj %>%
filter(AÑO == 2020)
mortalidad2021 <- mortalidad_aj %>%
filter(AÑO == 2021)
#Paso 3: Limpieza de la infomación de los mapas
MX <- getData("GADM", country = "MX", level = 1)
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
### CAmbiar incidencia_Entidad por el de mortalidad
MX@data <- left_join(MX@data, mortalidad2020, by = c("NAME_1"= "NOM_ENT"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad2020$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020,
bins = seq(0,300, by =50)
leaflet() %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,300, by =50)
leaflet() %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,300, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19")
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(MX$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
#Paso 1 Carga de librerías
library(tidyverse)
library(data.table)
library(aweek)
library(raster)
library(stringi)
library(leaflet)
#Volvemos a subir las bases con tasas ajustadas
mortalidad_aj <- fread("Bases/CONAPO/mortalidad.csv",
encoding = "Latin-1")
mortalidad2020 <- mortalidad_aj %>%
filter(AÑO == 2020)
#Paso 3: Limpieza de la infomación de los mapas
MX <- getData("GADM", country = "MX", level = 1)
MX@data$NAME_1 <- toupper(MX@data$NAME_1)
# MX@data$NAME_1 <- stri_trans_general(MX@data$NAME_1, "Latin-ASCII")
MX@data$NAME_1[which(MX@data$NAME_1%in% c("Distrito Federal"))]<- "Ciudad de México"
### CAmbiar incidencia_Entidad por el de mortalidad
MX@data <- left_join(MX@data, mortalidad2020, by = c("NAME_1"= "NOM_ENT"))
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad2020$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(MX$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(mortalidad2020$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = MX$TASA_AJUSTADA, reverse = T)
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = MX$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(MX$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(mortalidad2020$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
#Valores numéricos
color_num <- colorNumeric(palette = "RdBu",
domain = mortalidad2020$TASA_AJUSTADA, reverse = T)
leaflet() %>%
addProviderTiles(provider = "CartoDB.PositronNoLabels") %>%
addPolygons(data = MX ,
fillColor  = ~color_num(mortalidad2020$TASA_AJUSTADA),
color = "black",
weight = 1,
label = paste0(MX$NAME_1, ": ", round(mortalidad2020$TASA_AJUSTADA,0) ),
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5) %>%
addLegend(data = MX, position = "topright", pal = color_num, values = ~mortalidad2020$TASA_AJUSTADA,
bins = seq(0,400, by =50), #Aqui modificar el valor mínimo al maximo por x
title = "Mortalidad por COVID-19 durante 2020")
